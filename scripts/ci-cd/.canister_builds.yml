spec:
  inputs:
    src-folder:
      description: Name of the source folder, should be the same as the canister's cargo package name.
      options: ["claimlink"]
---
# Rust canisters test and production builds

$[[ inputs.src-folder ]] staging build:
  stage: build
  # needs: $[[ inputs.src-folder ]] tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "backend/libraries/{**,**/**,**/**/**}/*.{rs,toml,lock}"
        - "backend/external_canisters/{**,**/**,**/**/**}/*.{rs,toml,lock}"
        - "backend/canisters/$[[ inputs.src-folder ]]/{**,**/**,**/**/**}/*.{rs,toml,lock}"
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - "backend/libraries/{**,**/**,**/**/**}/*.{rs,toml,lock}"
        - "backend/external_canisters/{**,**/**,**/**/**}/*.{rs,toml,lock}"
        - "backend/canisters/$[[ inputs.src-folder ]]/{**,**/**,**/**/**}/*.{rs,toml,lock}"
  extends: .rust template
  script:
    - scripts/build-canister.sh --wasmonly $[[ inputs.src-folder ]]
    - scripts/generate-did.sh $[[ inputs.src-folder ]]
    - scripts/build-canister.sh --checksum $[[ inputs.src-folder ]]
    - ic-wasm backend/canisters/$[[ inputs.src-folder ]]/target/wasm32-unknown-unknown/release/$[[ inputs.src-folder ]]_canister.wasm info
  artifacts:
    name: "$[[ inputs.src-folder ]]-${CI_COMMIT_SHORT_SHA}-wasm-TEST_BUILD"
    paths:
      - backend/canisters/$[[ inputs.src-folder ]]/target/wasm32-unknown-unknown/release
      - backend/canisters/$[[ inputs.src-folder ]]/api/can.did
    expire_in: 1 day

$[[ inputs.src-folder ]] production build:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
      when: never
      changes:
        - "backend/libraries/{**,**/**,**/**/**}/*.{rs,toml,lock}"
        - "backend/external_canisters/{**,**/**,**/**/**}/*.{rs,toml,lock}"
        - "backend/canisters/$[[ inputs.src-folder ]]/{**,**/**,**/**/**}/*.{rs,toml,lock}"
    - if: $CI_COMMIT_TAG =~ '/^$[[ inputs.src-folder ]]-v\d+\.\d+\.\d+$/'
  extends: .rust template
  script:
    - scripts/build-canister.sh --wasmonly $[[ inputs.src-folder ]]
    - scripts/generate-did.sh $[[ inputs.src-folder ]]
    - scripts/build-canister.sh --checksum $[[ inputs.src-folder ]]
  artifacts:
    name: "${CI_PROJECT_NAME}-$[[ inputs.src-folder ]]-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-wasm"
    paths:
      - backend/canisters/$[[ inputs.src-folder ]]/target/wasm32-unknown-unknown/release
      - backend/canisters/$[[ inputs.src-folder ]]/api/can.did
    expire_in: 6 months

$[[ inputs.src-folder ]] integration-test build:
  stage: integration_testing
  rules:
    # This will always run when any backend canister is released. Doesn't need to be this canister
    - if: >
        $CI_COMMIT_TAG =~ '/^[a-zA-Z0-9_]+-v\d+\.\d+\.\d+(-reinstall)?$/'
      when: always
    # This will run on merges to develop or MR from develop to master
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - "backend/libraries/**/*.{rs,toml,lock,md,did,wasm,gz}"
        - "backend/external_canisters/**/*.{rs,toml,lock,md,did,wasm,gz}"
        - "backend/canisters/**/*.{rs,toml,lock,md,did,wasm,gz}"
        - "backend/integration_tests/**/*.{rs,toml,lock,md,did,wasm,gz}"
    # This will run on any MR except for MR coming from develop (e.g. MR develop to master). The latter is covered above and will always run Int-tests
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_REF_NAME != "develop"
      changes:
        - "backend/libraries/**/*.{rs,toml,lock,md,did,wasm,gz}"
        - "backend/external_canisters/**/*.{rs,toml,lock,md,did,wasm,gz}"
        - "backend/canisters/**/*.{rs,toml,lock,md,did,wasm,gz}"
        - "backend/integration_tests/**/*.{rs,toml,lock,md,did,wasm,gz}"
      needs: ["integration tests trigger"]
  extends: .rust template
  script:
    - scripts/build_canister.sh -it $[[ inputs.src-folder ]]
    - scripts/generate_did.sh $[[ inputs.src-folder ]]
  artifacts:
    name: "$[[ inputs.src-folder ]]-${CI_COMMIT_SHORT_SHA}-wasm-INT_TEST_BUILD"
    paths:
      - backend/canisters/$[[ inputs.src-folder ]]/target/wasm32-unknown-unknown/release
    expire_in: 1 day
