spec:
  inputs:
    src-folder:
      description: Name of the source folder, should be the same as the canister's cargo package name.
      options: ["claimlink"]
---
# Rust canister unit test with coverage

$[[ inputs.src-folder ]] tests:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "backend/libraries/{**}/*.{rs,toml}"
        - "backend/external_canisters/{**}/*.{rs,toml}"
        - "backend/canisters/$[[ inputs.src-folder ]]/{**}/*.{rs,toml}"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
      changes:
        - "backend/libraries/{**}/*.{rs,toml}"
        - "backend/external_canisters/{**}/*.{rs,toml}"
        - "backend/canisters/$[[ inputs.src-folder ]]/{**}/*.{rs,toml}"
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - "backend/libraries/{**}/*.{rs,toml}"
        - "backend/external_canisters/{**}/*.{rs,toml}"
        - "backend/canisters/$[[ inputs.src-folder ]]/{**}/*.{rs,toml}"
  extends: .rust template
  tags:
    - docker
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_SECURITY_OPT: "--security-opt seccomp=unconfined"
  script:
    - |
      set -e
      status=0
      for crate in $(find backend/canisters/$[[inputs.src-folder]] -name Cargo.toml -exec dirname {} \;); do
        echo "ðŸ“¦ Running tests in $crate"
        (cd "$crate" && cargo test) || status=1
      done
      exit $status
