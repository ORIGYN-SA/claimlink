/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TemplatesRouteImport } from './routes/templates'
import { Route as Mint_nftRouteImport } from './routes/mint_nft'
import { Route as Mint_certificateRouteImport } from './routes/mint_certificate'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as Create_certificateRouteImport } from './routes/create_certificate'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CollectionsIndexRouteImport } from './routes/collections/index'
import { Route as AccountIndexRouteImport } from './routes/account/index'
import { Route as CollectionsNewRouteImport } from './routes/collections/new'
import { Route as CollectionsCollectionIdRouteImport } from './routes/collections/$collectionId'
import { Route as AccountNewRouteImport } from './routes/account/new'
import { Route as AccountEdit_userRouteImport } from './routes/account/edit_user'
import { Route as AccountEdit_companyRouteImport } from './routes/account/edit_company'

const TemplatesRoute = TemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => rootRouteImport,
} as any)
const Mint_nftRoute = Mint_nftRouteImport.update({
  id: '/mint_nft',
  path: '/mint_nft',
  getParentRoute: () => rootRouteImport,
} as any)
const Mint_certificateRoute = Mint_certificateRouteImport.update({
  id: '/mint_certificate',
  path: '/mint_certificate',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const Create_certificateRoute = Create_certificateRouteImport.update({
  id: '/create_certificate',
  path: '/create_certificate',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsIndexRoute = CollectionsIndexRouteImport.update({
  id: '/collections/',
  path: '/collections/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountIndexRoute = AccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsNewRoute = CollectionsNewRouteImport.update({
  id: '/collections/new',
  path: '/collections/new',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsCollectionIdRoute = CollectionsCollectionIdRouteImport.update({
  id: '/collections/$collectionId',
  path: '/collections/$collectionId',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountNewRoute = AccountNewRouteImport.update({
  id: '/account/new',
  path: '/account/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountEdit_userRoute = AccountEdit_userRouteImport.update({
  id: '/account/edit_user',
  path: '/account/edit_user',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountEdit_companyRoute = AccountEdit_companyRouteImport.update({
  id: '/account/edit_company',
  path: '/account/edit_company',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create_certificate': typeof Create_certificateRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/mint_certificate': typeof Mint_certificateRoute
  '/mint_nft': typeof Mint_nftRoute
  '/templates': typeof TemplatesRoute
  '/account/edit_company': typeof AccountEdit_companyRoute
  '/account/edit_user': typeof AccountEdit_userRoute
  '/account/new': typeof AccountNewRoute
  '/collections/$collectionId': typeof CollectionsCollectionIdRoute
  '/collections/new': typeof CollectionsNewRoute
  '/account': typeof AccountIndexRoute
  '/collections': typeof CollectionsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create_certificate': typeof Create_certificateRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/mint_certificate': typeof Mint_certificateRoute
  '/mint_nft': typeof Mint_nftRoute
  '/templates': typeof TemplatesRoute
  '/account/edit_company': typeof AccountEdit_companyRoute
  '/account/edit_user': typeof AccountEdit_userRoute
  '/account/new': typeof AccountNewRoute
  '/collections/$collectionId': typeof CollectionsCollectionIdRoute
  '/collections/new': typeof CollectionsNewRoute
  '/account': typeof AccountIndexRoute
  '/collections': typeof CollectionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create_certificate': typeof Create_certificateRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/mint_certificate': typeof Mint_certificateRoute
  '/mint_nft': typeof Mint_nftRoute
  '/templates': typeof TemplatesRoute
  '/account/edit_company': typeof AccountEdit_companyRoute
  '/account/edit_user': typeof AccountEdit_userRoute
  '/account/new': typeof AccountNewRoute
  '/collections/$collectionId': typeof CollectionsCollectionIdRoute
  '/collections/new': typeof CollectionsNewRoute
  '/account/': typeof AccountIndexRoute
  '/collections/': typeof CollectionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create_certificate'
    | '/dashboard'
    | '/login'
    | '/mint_certificate'
    | '/mint_nft'
    | '/templates'
    | '/account/edit_company'
    | '/account/edit_user'
    | '/account/new'
    | '/collections/$collectionId'
    | '/collections/new'
    | '/account'
    | '/collections'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create_certificate'
    | '/dashboard'
    | '/login'
    | '/mint_certificate'
    | '/mint_nft'
    | '/templates'
    | '/account/edit_company'
    | '/account/edit_user'
    | '/account/new'
    | '/collections/$collectionId'
    | '/collections/new'
    | '/account'
    | '/collections'
  id:
    | '__root__'
    | '/'
    | '/create_certificate'
    | '/dashboard'
    | '/login'
    | '/mint_certificate'
    | '/mint_nft'
    | '/templates'
    | '/account/edit_company'
    | '/account/edit_user'
    | '/account/new'
    | '/collections/$collectionId'
    | '/collections/new'
    | '/account/'
    | '/collections/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Create_certificateRoute: typeof Create_certificateRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  Mint_certificateRoute: typeof Mint_certificateRoute
  Mint_nftRoute: typeof Mint_nftRoute
  TemplatesRoute: typeof TemplatesRoute
  AccountEdit_companyRoute: typeof AccountEdit_companyRoute
  AccountEdit_userRoute: typeof AccountEdit_userRoute
  AccountNewRoute: typeof AccountNewRoute
  CollectionsCollectionIdRoute: typeof CollectionsCollectionIdRoute
  CollectionsNewRoute: typeof CollectionsNewRoute
  AccountIndexRoute: typeof AccountIndexRoute
  CollectionsIndexRoute: typeof CollectionsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/templates': {
      id: '/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mint_nft': {
      id: '/mint_nft'
      path: '/mint_nft'
      fullPath: '/mint_nft'
      preLoaderRoute: typeof Mint_nftRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mint_certificate': {
      id: '/mint_certificate'
      path: '/mint_certificate'
      fullPath: '/mint_certificate'
      preLoaderRoute: typeof Mint_certificateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create_certificate': {
      id: '/create_certificate'
      path: '/create_certificate'
      fullPath: '/create_certificate'
      preLoaderRoute: typeof Create_certificateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/': {
      id: '/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof CollectionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/new': {
      id: '/collections/new'
      path: '/collections/new'
      fullPath: '/collections/new'
      preLoaderRoute: typeof CollectionsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/$collectionId': {
      id: '/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/collections/$collectionId'
      preLoaderRoute: typeof CollectionsCollectionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/new': {
      id: '/account/new'
      path: '/account/new'
      fullPath: '/account/new'
      preLoaderRoute: typeof AccountNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/edit_user': {
      id: '/account/edit_user'
      path: '/account/edit_user'
      fullPath: '/account/edit_user'
      preLoaderRoute: typeof AccountEdit_userRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/edit_company': {
      id: '/account/edit_company'
      path: '/account/edit_company'
      fullPath: '/account/edit_company'
      preLoaderRoute: typeof AccountEdit_companyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Create_certificateRoute: Create_certificateRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  Mint_certificateRoute: Mint_certificateRoute,
  Mint_nftRoute: Mint_nftRoute,
  TemplatesRoute: TemplatesRoute,
  AccountEdit_companyRoute: AccountEdit_companyRoute,
  AccountEdit_userRoute: AccountEdit_userRoute,
  AccountNewRoute: AccountNewRoute,
  CollectionsCollectionIdRoute: CollectionsCollectionIdRoute,
  CollectionsNewRoute: CollectionsNewRoute,
  AccountIndexRoute: AccountIndexRoute,
  CollectionsIndexRoute: CollectionsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
